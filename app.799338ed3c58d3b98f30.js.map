{"version":3,"sources":["webpack://todo/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://todo/./node_modules/date-fns/esm/toDate/index.js","webpack://todo/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://todo/./node_modules/date-fns/esm/parseISO/index.js","webpack://todo/./src/js/modules/validate.js","webpack://todo/./node_modules/nanoid/index.prod.js","webpack://todo/./src/js/modules/projects.js","webpack://todo/./src/js/modules/todos.js","webpack://todo/./node_modules/date-fns/esm/differenceInMilliseconds/index.js","webpack://todo/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://todo/./node_modules/date-fns/esm/startOfDay/index.js","webpack://todo/./node_modules/date-fns/esm/differenceInCalendarDays/index.js","webpack://todo/./node_modules/date-fns/esm/differenceInDays/index.js","webpack://todo/./node_modules/date-fns/esm/differenceInHours/index.js","webpack://todo/./src/js/modules/element-generator.js","webpack://todo/./src/js/modules/local-storage.js","webpack://todo/./src/js/modules/todos-listeners.js","webpack://todo/./src/js/modules/render.js","webpack://todo/./src/js/modules/templates.js","webpack://todo/./src/js/modules/delete-elements.js","webpack://todo/./node_modules/date-fns/esm/differenceInMinutes/index.js","webpack://todo/./src/js/modules/clear-dom.js","webpack://todo/./src/js/modules/forms-listeners.js","webpack://todo/./src/js/modules/edit-project.js","webpack://todo/./src/js/index.js","webpack://todo/./src/js/modules/add-elements.js","webpack://todo/./node_modules/date-fns/esm/isPast/index.js"],"names":["requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","toInteger","dirtyNumber","number","Number","isNaN","Math","ceil","floor","MILLISECONDS_IN_HOUR","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","dirtyOptions","options","additionalDigits","RangeError","date","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","year","offset","timestamp","time","parseTime","dirtyDate","result","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","setFullYear","parseTimezone","dateString","timeString","array","split","test","substr","token","exec","replace","regex","RegExp","captures","match","parseInt","century","slice","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","diff","getUTCDay","setUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","max","value","hours","parseTimeUnit","minutes","seconds","validateTime","parseFloat","timezoneString","sign","_hours","validateTimezone","validateText","rule","input","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toUpperCase","projectName","projectDescription","tasks","name","description","getProjectName","updateName","newName","getDescription","updateDescription","newDescription","getTasks","addTasks","toDo","push","removeTask","toDoIndex","splice","title","dueDate","priority","done","isDone","getTitle","getDueDate","getPriority","updateIsDone","getIsDone","differenceInMilliseconds","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","getDateMillisecondsPart","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","getTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","startOfDay","setHours","MILLISECONDS_IN_DAY","differenceInCalendarDays","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","compareLocalAsc","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","element","elementTemplate","document","createElement","styles","forEach","cssStyle","classList","add","getAllTasks","project","arr","task","projectsArray","querySelectorAll","addEventListener","toggle","previousSibling","nextElementSibling","parentElement","filter","dataset","localStorage","setItem","JSON","stringify","exportObject","renderProjects","projectsList","getElementById","fragment","createDocumentFragment","appendChild","box","generateElement","setAttribute","textContent","deleteButton","append","projectTemplate","button","e","projectID","target","projectIndex","findIndex","remove","deleteProjectButton","click","renderToDos","now","diffMinutes","diffDays","diffHours","differenceInMinutes","difference","abs","setDate","differenceInDays","differenceInHours","checkbox","toDoTemplate","toDoID","todo","deleteToDoButton","todoCheckBoxListener","clearProjects","innerHTML","clearToDos","regEx","projectList","generateTitle","container","subtitle","projects","data","parse","getItem","createProject","createToDo","index","listTitle","listSubtitle","childNodes","contains","activeProject","querySelector","form","projectCancelButton","preventDefault","isSelected","newSelected","undefined","addProject","reset","lastChild","projectsFormListener","todoCancelButton","checked","isPast","priorityChosen","getElementsByName","defaultValue","addToDo","todosFormListener","editButton","replaceWith","inputTitle","inputSubtitle","groupButtons","saveButton","saveListener","cancelButton","cancelListener","generateForm","editProjectListener"],"mappings":"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","file":"app.799338ed3c58d3b98f30.js","sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate(), dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    result.setFullYear(dirtyDate.getUTCFullYear());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import { isPast, parseISO } from 'date-fns';\n\nconst validateText = (rule, input) => {\n  if (rule.test(input.value)) return true;\n  return false;\n};\n\nconst validatePriority = () => {\n  const priorityInputs = [...document.querySelectorAll('.form__radio')];\n  if (\n    priorityInputs.filter((input) => {\n      if (input.checked) return true;\n      return false;\n    }).length > 0\n  ) {\n    return true;\n  }\n  return false;\n};\n\nconst validateDate = (dueDate) => {\n  if (dueDate.value === '') return false;\n  if (isPast(parseISO(dueDate.value)) === true) return false;\n  return true;\n};\n\nexport { validateText, validatePriority, validateDate };\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { nanoid } from 'nanoid';\n\nconst createProject = (projectName, projectDescription) => {\n  const tasks = [];\n  const id = nanoid();\n  let name = projectName;\n  let description = projectDescription;\n  const getProjectName = () => name;\n  const getDescription = () => description;\n  const updateName = (newName) => {\n    name = newName;\n  };\n  const updateDescription = (newDescription) => {\n    description = newDescription;\n  };\n  const getTasks = () => tasks;\n  const addTasks = (toDo) => tasks.push(toDo);\n  const removeTask = (toDoIndex) => tasks.splice(toDoIndex, 1);\n\n  return {\n    getProjectName,\n    updateName,\n    getDescription,\n    updateDescription,\n    id,\n    getTasks,\n    addTasks,\n    removeTask,\n  };\n};\nexport default createProject;\n","import { nanoid } from 'nanoid';\n\nconst createToDo = (title, description, dueDate, priority, done) => {\n  let isDone = done;\n  const id = nanoid();\n  const updateIsDone = () => {\n    isDone = !isDone;\n  };\n  // const getProject = () => projectName;\n  const getTitle = () => title;\n  const getDescription = () => description;\n  const getDueDate = () => dueDate;\n  const getPriority = () => priority;\n  const getIsDone = () => isDone;\n\n  return {\n    getTitle,\n    getDescription,\n    getDueDate,\n    getPriority,\n    updateIsDone,\n    getIsDone,\n    id,\n  };\n};\n\nexport default createToDo;\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * var result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","const generateElement = (element, ...styles) => {\n  const elementTemplate = document.createElement(`${element}`);\n  [...styles].forEach((cssStyle) => {\n    elementTemplate.classList.add(cssStyle);\n  });\n  return elementTemplate;\n};\n\nexport default generateElement;\n","const getAllTasks = (project) => {\n  const arr = [];\n  project.getTasks().forEach((task) => {\n    arr.push({\n      title: task.getTitle(),\n      description: task.getDescription(),\n      dueDate: task.getDueDate(),\n      priority: task.getPriority(),\n      isDone: task.getIsDone(),\n    });\n  });\n  return arr;\n};\n\nconst exportObject = (projectsArray) => {\n  const arr = [];\n  projectsArray.forEach((project) => {\n    arr.push({\n      name: project.getProjectName(),\n      description: project.getDescription(),\n      tasks: getAllTasks(project),\n    });\n  });\n  return arr;\n};\n\nexport default exportObject;\n","import exportObject from './local-storage';\n\nconst todoCheckBoxListener = (projectsArray, project) => {\n  const checkbox = document.querySelectorAll('.projects-list__checkbox');\n  checkbox.forEach((element) => {\n    element.addEventListener('click', () => {\n      element.classList.toggle('projects-list__checkbox--checked');\n      element.previousSibling.classList.toggle('prioritychecked');\n      element.nextElementSibling.classList.toggle('projects-list__name--checked');\n      element.nextElementSibling.nextElementSibling.classList.toggle('projects-list__time--checked');\n      element.parentElement.classList.toggle('projects-list__item--checked');\n\n      const [todo] = project\n        .getTasks()\n        .filter((task) => task.id === element.parentElement.dataset.id);\n      todo.updateIsDone();\n      localStorage.setItem('db', JSON.stringify(exportObject(projectsArray)));\n    });\n  });\n};\n\nexport default todoCheckBoxListener;\n","import { projectTemplate, toDoTemplate } from './templates';\nimport { deleteProjectButton, deleteToDoButton } from './delete-elements';\nimport todoCheckBoxListener from './todos-listeners';\n\nconst renderProjects = (projectsArray) => {\n  const projectsList = document.getElementById('menu');\n  const fragment = document.createDocumentFragment();\n  projectsArray.forEach((project) => {\n    fragment.appendChild(projectTemplate(project));\n  });\n  projectsList.append(fragment);\n  deleteProjectButton(projectsArray);\n  const newSelected = [...document.querySelectorAll('.menu__item')];\n  newSelected[0].click();\n};\n\nconst renderToDos = (projectsArray, project) => {\n  const projectsList = document.getElementById('projects-list');\n  const fragment = document.createDocumentFragment();\n  project.getTasks().forEach((task) => {\n    fragment.appendChild(toDoTemplate(task));\n  });\n  projectsList.appendChild(fragment);\n  deleteToDoButton(projectsArray, project);\n  todoCheckBoxListener(projectsArray, project);\n};\n\nconst renderListTitle = (project) => {\n  const listTitle = document.querySelector('.main__title');\n  const listSubtitle = document.querySelector('.main__subtitle');\n  listTitle.textContent = project.getProjectName();\n  listSubtitle.textContent = project.getDescription();\n};\n\nexport { renderProjects, renderToDos, renderListTitle };\n","import {\n  differenceInDays,\n  differenceInHours,\n  differenceInMinutes,\n  parseISO,\n} from 'date-fns';\nimport generateElement from './element-generator';\n\nconst projectTemplate = (project) => {\n  const box = generateElement('li', 'menu__item');\n  box.setAttribute('data-id', `${project.id}`);\n  const title = generateElement('span', 'menu__title');\n  title.textContent = `${project.getProjectName()}`;\n  const deleteButton = generateElement('i', 'fas', 'fa-trash');\n  box.append(title, deleteButton);\n  return box;\n};\n\nconst generateDate = (dueDate) => {\n  const now = new Date();\n  const diffMinutes = differenceInMinutes(dueDate, now);\n  const diffDays = differenceInDays(dueDate, now);\n  const diffHours = differenceInHours(dueDate, now);\n  if (diffDays <= 0) return `${diffHours} hours and ${diffMinutes - 60 * diffHours} minutes left`;\n  if (diffDays === 1) return `${diffDays} day and ${diffHours - 24} hours left`;\n  return `${diffDays} days and ${diffHours - 24 * diffDays} hours left`;\n};\n\nconst toDoTemplate = (task) => {\n  const box = generateElement('li', 'projects-list__item');\n  box.setAttribute('data-id', task.id);\n  const priority = generateElement(\n    'div',\n    'projects-list__priority',\n    `${task.getPriority()}`,\n  );\n  const title = generateElement('span', 'projects-list__name');\n  title.textContent = `${task.getTitle()}`;\n  const time = generateElement('span', 'projects-list__time');\n  time.textContent = generateDate(parseISO(task.getDueDate()));\n  const deleteButton = generateElement('i', 'fas', 'fa-trash');\n  const checkbox = generateElement('div', 'projects-list__checkbox');\n  if (task.getIsDone() === true) {\n    box.classList.add('projects-list__item--checked');\n    checkbox.classList.add('projects-list__checkbox--checked');\n    title.classList.add('projects-list__name--checked');\n    time.classList.add('projects-list__time--checked');\n    priority.classList.add('prioritychecked');\n  }\n  box.append(priority, checkbox, title, time, deleteButton);\n  return box;\n};\n\nexport { projectTemplate, toDoTemplate };\n","import exportObject from './local-storage';\n\nconst deleteProjectButton = (projectsArray) => {\n  const deleteButtons = document.querySelectorAll('.menu i');\n  deleteButtons.forEach((button) => {\n    button.addEventListener('click', (e) => {\n      const editProject = document.getElementById('edit-project-form');\n      if (editProject !== null) return;\n      const projectID = e.target.parentElement.dataset.id;\n      const projectIndex = projectsArray.findIndex(\n        (project) => project.id === projectID,\n      );\n      button.parentElement.remove();\n      projectsArray.splice(projectIndex, 1);\n      localStorage.setItem('db', JSON.stringify(exportObject(projectsArray)));\n    });\n  });\n};\n\nconst deleteToDoButton = (projectsArray, project) => {\n  const deleteButtons = document.querySelectorAll('.projects-list i');\n  deleteButtons.forEach((button) => {\n    button.addEventListener('click', (e) => {\n      const toDoID = e.target.parentElement.dataset.id;\n      const toDoIndex = project\n        .getTasks()\n        .findIndex((todo) => todo.id === toDoID);\n      button.parentElement.remove();\n      project.removeTask(toDoIndex);\n      localStorage.setItem('db', JSON.stringify(exportObject(projectsArray)));\n    });\n  });\n};\n\nexport { deleteProjectButton, deleteToDoButton };\n","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","const clearProjects = () => {\n  const list = document.getElementById('menu');\n  list.innerHTML = '';\n};\n\nconst clearToDos = () => {\n  const list = document.getElementById('projects-list');\n  list.innerHTML = '';\n};\n\nexport { clearToDos, clearProjects };\n","import { validateText, validatePriority, validateDate } from './validate';\nimport { addProject, addToDo } from './add-elements';\nimport { clearToDos } from './clear-dom';\nimport { renderToDos, renderListTitle } from './render';\n\nconst regEx = {\n  name: /^[a-zA-Z0-9À-ÿ\\s]{1,20}$/,\n  description: /^[a-zA-Z0-9À-ÿ\\s]{1,60}$/,\n};\n\nconst projectsFormListener = (projectsArray) => {\n  const form = document.getElementById('project-form');\n  const name = document.querySelector('.project-form__name');\n  const description = document.querySelector('.project-form__description');\n  const projectCancelButton = document.querySelector(\n    '.button__project-form.button--cancel',\n  );\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n    if (\n      validateText(regEx.name, name) === true &&\n      validateText(regEx.description, description) === true\n    ) {\n      addProject(projectsArray, name.value, description.value);\n      form.reset();\n      form.classList.toggle('hidden');\n      if (form.lastChild.classList.contains('error-msg')) {\n        form.lastChild.classList.add('hidden');\n      }\n    } else {\n      form.lastChild.classList.remove('hidden');\n    }\n  });\n  projectCancelButton.addEventListener('click', (e) => {\n    e.preventDefault();\n    form.classList.add('hidden');\n    form.reset();\n    if (form.lastChild.classList.contains('error-msg')) {\n      form.lastChild.classList.add('hidden');\n    }\n  });\n};\n\nconst todosFormListener = (projectsArray) => {\n  const form = document.getElementById('todos-form');\n  const name = document.querySelector('.form__task-name');\n  const description = document.querySelector('.form__task-description');\n  const dueDate = document.querySelector('.form__calendar');\n  const todoCancelButton = document.querySelector(\n    'div.group__todo-buttons .button--cancel',\n  );\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n    if (\n      validateText(regEx.name, name) === true &&\n      validateText(regEx.description, description) === true &&\n      validatePriority() === true &&\n      validateDate(dueDate) === true\n    ) {\n      addToDo(projectsArray, name, description, dueDate);\n      form.reset();\n      if (form.lastChild.classList.contains('error-msg')) {\n        form.lastChild.classList.add('hidden');\n      }\n    } else {\n      form.lastChild.classList.remove('hidden');\n    }\n  });\n  todoCancelButton.addEventListener('click', (e) => {\n    e.preventDefault();\n    form.classList.add('hidden');\n    form.reset();\n    if (form.lastChild.classList.contains('error-msg')) {\n      form.lastChild.classList.add('hidden');\n    }\n  });\n};\n\nconst addProjectsListener = (projectsArray) => {\n  const projectList = document.getElementById('menu');\n  projectList.addEventListener('click', (e) => {\n    const editProject = document.getElementById('edit-project-form');\n    if (editProject !== null) return;\n    const projects = [...projectList.childNodes];\n    if (e.target.classList.contains('menu__item')) {\n      projects.forEach((project) => {\n        project.classList.replace('menu__item--active', 'menu__item');\n      });\n      e.target.classList.replace('menu__item', 'menu__item--active');\n      const [activeProject] = projectsArray.filter(\n        (project) => project.id === e.target.dataset.id,\n      );\n      clearToDos();\n      renderToDos(projectsArray, activeProject);\n      renderListTitle(activeProject);\n    }\n  });\n};\n\nconst addProjectButtonListener = () => {\n  const addProjectButton = document.getElementById('addproject-button');\n  addProjectButton.addEventListener('click', () => {\n    const form = document.getElementById('project-form');\n    form.classList.toggle('hidden');\n  });\n};\n\nconst addToDoButtonListener = () => {\n  const addToDoButton = document.getElementById('addtask-button');\n  addToDoButton.addEventListener('click', () => {\n    const form = document.getElementById('todos-form');\n    form.classList.toggle('hidden');\n  });\n};\n\nexport {\n  todosFormListener,\n  projectsFormListener,\n  addToDoButtonListener,\n  addProjectButtonListener,\n  addProjectsListener,\n};\n","import generateElement from './element-generator';\nimport { clearToDos, clearProjects } from './clear-dom';\nimport { renderProjects, renderToDos, renderListTitle } from './render';\nimport exportObject from './local-storage';\n\nconst generateTitle = (project) => {\n  const container = generateElement('div', 'project-info');\n  const title = generateElement('h1', 'main__title');\n  title.textContent = project.getProjectName();\n  const subtitle = generateElement('h2', 'main__subtitle');\n  subtitle.textContent = project.getDescription();\n  container.append(title, subtitle);\n  return container;\n};\n\nconst saveListener = (form, button, projectsArray) => {\n  const projectID = document.querySelector('.menu__item--active').dataset.id;\n  const container = document.querySelector('.project-info');\n  const editButton = document.querySelector('.button.button--edit');\n  button.addEventListener('click', (e) => {\n    e.preventDefault();\n    const [activeProject] = projectsArray.filter((project) => project.id === projectID);\n    activeProject.updateName(form.name.value);\n    activeProject.updateDescription(form.description.value);\n    container.replaceWith(generateTitle(activeProject));\n    localStorage.setItem('db', JSON.stringify(exportObject(projectsArray)));\n    editButton.classList.remove('hidden');\n    const isSelected = document.querySelector('.menu__item--active');\n    clearProjects();\n    renderProjects(projectsArray);\n    if (isSelected !== null) {\n      const [newSelected] = [...document.querySelectorAll('.menu__item')].filter(\n        (element) => element.dataset.id === isSelected.dataset.id,\n      );\n      if (newSelected !== undefined) newSelected.click();\n    }\n  });\n};\n\nconst cancelListener = (form, button, projectsArray) => {\n  const projectID = document.querySelector('.menu__item--active').dataset.id;\n  const container = document.querySelector('.project-info');\n  const editButton = document.querySelector('.button.button--edit');\n  button.addEventListener('click', (e) => {\n    e.preventDefault();\n    const [activeProject] = projectsArray.filter((project) => project.id === projectID);\n    container.replaceWith(generateTitle(activeProject));\n    editButton.classList.remove('hidden');\n  });\n};\n\nconst generateForm = (title, subtitle, projectsArray) => {\n  const form = generateElement('form', 'edit-project');\n  form.setAttribute('id', 'edit-project-form');\n  const inputTitle = generateElement('input', 'project-form__name');\n  inputTitle.setAttribute('value', title.textContent);\n  inputTitle.setAttribute('name', 'name');\n  const inputSubtitle = generateElement('input', 'project-form__description');\n  inputSubtitle.setAttribute('value', subtitle.textContent);\n  inputSubtitle.setAttribute('name', 'description');\n  const groupButtons = generateElement('div', 'group__project-buttons');\n  const saveButton = generateElement(\n    'button',\n    'button',\n    'button--save',\n    'button__project-form',\n  );\n  saveButton.textContent = 'Save';\n  saveListener(form, saveButton, projectsArray);\n  const cancelButton = generateElement(\n    'button',\n    'button',\n    'button--cancel',\n    'button__project-form',\n  );\n  cancelListener(form, cancelButton, projectsArray);\n  cancelButton.textContent = 'Cancel';\n  groupButtons.append(saveButton, cancelButton);\n  form.append(inputTitle, inputSubtitle, groupButtons);\n  return form;\n};\n\nconst editProjectListener = (projectsArray) => {\n  const editButton = document.querySelector('.button.button--edit');\n  editButton.addEventListener('click', () => {\n    const title = document.querySelector('.main__title');\n    const subtitle = document.querySelector('.main__subtitle');\n    editButton.classList.add('hidden');\n    subtitle.remove();\n    title.replaceWith(generateForm(title, subtitle, projectsArray));\n  });\n};\n\nexport default editProjectListener;\n","import '../sass/main.scss';\nimport {\n  todosFormListener,\n  projectsFormListener,\n  addToDoButtonListener,\n  addProjectButtonListener,\n  addProjectsListener,\n} from './modules/forms-listeners';\nimport createProject from './modules/projects';\nimport createToDo from './modules/todos';\nimport { renderProjects } from './modules/render';\nimport editProjectListener from './modules/edit-project';\n\nconst projects = [];\n\nconst data = JSON.parse(localStorage.getItem('db'));\nif (data === null || data.length === 0) {\n  projects.push(createProject('Your first project', 'Add projects and todos!'));\n  projects[0].addTasks(\n    createToDo(\n      'Your first todo',\n      'Add todos and choose its due date and its priority!',\n      '2022-01-01',\n      'priority3',\n    ),\n  );\n} else {\n  data.forEach((project, index) => {\n    projects.push(createProject(project.name, project.description));\n    project.tasks.forEach((task) => {\n      projects[index].addTasks(\n        createToDo(task.title, task.description, task.dueDate, task.priority, task.isDone),\n      );\n    });\n  });\n}\n\naddProjectButtonListener(); // OK\naddToDoButtonListener(); // OK\naddProjectsListener(projects); // OK\nprojectsFormListener(projects); // OK\ntodosFormListener(projects); // OK\nrenderProjects(projects); // OK\neditProjectListener(projects);\n","import createProject from './projects';\nimport createToDo from './todos';\nimport { renderToDos, renderProjects } from './render';\nimport { clearToDos, clearProjects } from './clear-dom';\nimport exportObject from './local-storage';\n\nconst addProject = (projectsArray, name, description) => {\n  projectsArray.push(createProject(name, description));\n  const isSelected = document.querySelector('.menu__item--active');\n  clearProjects();\n  renderProjects(projectsArray);\n  if (isSelected !== null) {\n    const [newSelected] = [...document.querySelectorAll('.menu__item')].filter(\n      (element) => element.dataset.id === isSelected.dataset.id,\n    );\n    if (newSelected !== undefined) newSelected.click();\n  }\n  localStorage.setItem('db', JSON.stringify(exportObject(projectsArray)));\n};\n\nconst addToDo = (projectsArray, name, description, dueDate) => {\n  const priorityChosen = [...document.getElementsByName('priority')].filter(\n    (input) => input.checked === true,\n  );\n  const projectID = document.querySelector('.menu__item--active').dataset.id;\n  const index = projectsArray.findIndex((project) => project.id === projectID);\n  projectsArray[index].addTasks(\n    createToDo(\n      name.value,\n      description.value,\n      dueDate.value,\n      priorityChosen[0].defaultValue,\n    ),\n  );\n  clearToDos();\n  renderToDos(projectsArray, projectsArray[index]);\n  localStorage.setItem('db', JSON.stringify(exportObject(projectsArray)));\n};\n\nexport { addProject, addToDo };\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}"],"sourceRoot":""}